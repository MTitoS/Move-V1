{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mthsi\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Code\\\\portfolio\\\\Move-V1\\\\src\\\\components\\\\Countdown.tsx\";\nimport { useContext } from \"react\";\nimport { CountdownContext } from \"../contexts/CountdownContext\";\nimport styles from \"../styles/components/Countdown.module.css\";\nexport function Countdown() {\n  const {\n    minutes,\n    seconds,\n    hasFinished,\n    isActive,\n    startCountdown,\n    resetCountdown\n  } = useContext(CountdownContext);\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      disabled: true,\n      className: styles.countdownButton,\n      children: [\"Ciclo terminado \", /*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.check,\n        src: \"/icons/check.png\",\n        alt: \"Imagem ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: resetCountdown,\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: startCountdown,\n        className: styles.countdownButton,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/mthsi/OneDrive/√Årea de Trabalho/Code/portfolio/Move-V1/src/components/Countdown.tsx"],"names":["useContext","CountdownContext","styles","Countdown","minutes","seconds","hasFinished","isActive","startCountdown","resetCountdown","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","countdownContainer","countdownButton","check","countdownButtonActive"],"mappings":";;;AAAA,SAA8BA,UAA9B,QAAgD,OAAhD;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,OAAO,SAASC,SAAT,GAAqB;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA,QAAhC;AAA0CC,IAAAA,cAA1C;AAA0DC,IAAAA;AAA1D,MAA6ET,UAAU,CAACC,gBAAD,CAA7F;AAEA,QAAM,CAACS,UAAD,EAAYC,WAAZ,IAA2BC,MAAM,CAACR,OAAD,CAAN,CAAgBS,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAjC;AACA,QAAM,CAACC,UAAD,EAAYC,WAAZ,IAA2BJ,MAAM,CAACP,OAAD,CAAN,CAAgBQ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAjC;AAEA,sBACI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAEZ,MAAM,CAACe,kBAAvB;AAAA,8BACA;AAAA,gCACI;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA,eAMA;AAAA,gCACI;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAaEV,WAAW,gBACT;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,MAA9B;AAA+B,MAAA,SAAS,EAAEJ,MAAM,CAACgB,eAAjD;AAAA,kDACgB;AAAK,QAAA,SAAS,EAAEhB,MAAM,CAACiB,KAAvB;AAA8B,QAAA,GAAG,EAAC,kBAAlC;AAAqD,QAAA,GAAG,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,cADhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,gBAKT;AAAA,gBACKZ,QAAQ,gBACT;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEE,cAA/B;AAA+C,QAAA,SAAS,EAAG,GAAEP,MAAM,CAACgB,eAAgB,IAAGhB,MAAM,CAACkB,qBAAsB,EAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADS,gBAKT;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEZ,cAA/B;AAA+C,QAAA,SAAS,EAAEN,MAAM,CAACgB,eAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ,qBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { CountdownContext } from \"../contexts/CountdownContext\";\r\nimport styles from \"../styles/components/Countdown.module.css\";\r\n\r\nexport function Countdown() {\r\n    const { minutes,seconds, hasFinished, isActive, startCountdown, resetCountdown } = useContext(CountdownContext);\r\n\r\n    const [minuteLeft,minuteRight] = String(minutes).padStart(2, '0').split('');\r\n    const [secondLeft,secondRight] = String(seconds).padStart(2, '0').split('');\r\n\r\n    return (\r\n        <div>\r\n        <div className={styles.countdownContainer}>\r\n        <div>\r\n            <span>{minuteLeft}</span>\r\n            <span>{minuteRight}</span>\r\n        </div>\r\n        <span>:</span>\r\n        <div>\r\n            <span>{secondLeft}</span>\r\n            <span>{secondRight}</span>\r\n        </div>\r\n        </div>\r\n\r\n        { hasFinished ? (\r\n            <button type=\"button\" disabled className={styles.countdownButton}>\r\n            Ciclo terminado <img className={styles.check} src=\"/icons/check.png\" alt=\"Imagem ciclo\" />\r\n            </button>\r\n        ) : (\r\n            <>\r\n                {isActive ? (\r\n                <button type=\"button\" onClick={resetCountdown} className={`${styles.countdownButton} ${styles.countdownButtonActive}`}>\r\n                Abandonar ciclo\r\n                </button>\r\n        ) : (\r\n                <button type=\"button\" onClick={startCountdown} className={styles.countdownButton}>\r\n                Iniciar um ciclo\r\n                </button>\r\n        )\r\n        }\r\n            </>\r\n        ) }\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}